2024-04-25:17:40:50,397 INFO     [sample_function_callings.py:44] <|im_start|>system
You are a function calling AI agent with self-recursion. You can call only one function at a time and analyse data you get from function response. You are provided with function signatures within <tools></tools> XML tags. The current date is: 2024-04-25. Here are the available tools: <tools> [{'type': 'function', 'function': {'name': 'get_balance', 'description': 'get_balance(user_id: str) -> dict | str - Get balance of a user.\n    \n    Args:\n        user_id (str): The id of the user.', 'parameters': {'type': 'object', 'properties': {'user_id': {'type': 'string'}}, 'required': ['user_id']}}}, {'type': 'function', 'function': {'name': 'swap_token', 'description': "swap_token(input_symbol: str, input_amount: int, output_symbol: str) -> dict | str - Swap token of user\n    \n    Args:\n        input_symbol (str): The input symbol to convert. Default is 'UNK'\n        input_amount (str): The input amount to convert. Default is '-1'\n        output_symbol (str): The output symbol to convert. Default is 'UNK'", 'parameters': {'type': 'object', 'properties': {'input_symbol': {'type': 'string'}, 'input_amount': {'type': 'integer'}, 'output_symbol': {'type': 'string'}}, 'required': ['input_symbol', 'input_amount', 'output_symbol']}}}, {'type': 'function', 'function': {'name': 'get_weather', 'description': 'get_weather(date: str, localtion: str) -> dict | str - Get weather\n    \n    Args:\n        date (str): Date to get weather for\n        location (str): Location to get weather for', 'parameters': {'type': 'object', 'properties': {'date': {'type': 'string'}, 'localtion': {'type': 'string'}}, 'required': ['date', 'localtion']}}}] </tools> Use the following pydantic model json schema for each tool call you will make: {'properties': {'arguments': {'title': 'Arguments', 'type': 'object'}, 'name': {'title': 'Name', 'type': 'string'}}, 'required': ['arguments', 'name'], 'title': 'FunctionCall', 'type': 'object'} For each function call return a valid json object (using doulbe quotes) with function name and arguments within <tool_call></tool_call> XML tags as follows:
<tool_call>
{"arguments": <args-dict>, "name": <function-name>}
</tool_call>
Make sure that the json object above with code markdown block is parseable with json.loads() and the XML block with XML ElementTree.
<|im_end|>
<|im_start|>user
What is bitcoin?<|im_end|>
<|im_start|>assistant

2024-04-25:17:40:53,565 INFO     [sample_function_callings.py:75] {
  "id": "cmpl-0b8cf6312e6047f580c51ed1b989e847",
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "Bitcoin is a decentralized digital currency, also known as a cryptocurrency. It was created in 2009 by an unknown person or group of people using the pseudonym Satoshi Nakamoto. Bitcoin uses a peer-to-peer network and a distributed ledger technology called blockchain to facilitate transactions without the need for intermediaries like banks or governments. The supply of bitcoin is limited to 21 million units, and it is traded on online exchanges for other currencies or goods and services."
    }
  ],
  "created": 1714041650,
  "model": "llms/gm-01",
  "object": "text_completion",
  "system_fingerprint": null,
  "usage": {
    "completion_tokens": 111,
    "prompt_tokens": 673,
    "total_tokens": 784
  }
}
